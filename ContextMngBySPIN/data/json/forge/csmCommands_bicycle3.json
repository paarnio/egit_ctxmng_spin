{	"CSMHeader": {
		"filename": "data/json/csmCommands_bicycle3.json",
		"created": "2016-02-18",
		"validated": "http://www.jsoneditoronline.org/",
		"application": "CommandFileSpinMng.java",
		"history": "Single Flow: [0,1,2,12,16,7,15,7,3,4,10]", 
		"workflow": {
		"name": "BICYCLE model workflow",
		"processlog": " (start)-->| LOAD_KB(0) |-->| INF_MODEL(1) |-->| INFER(2) |-->| LIST(12) |-->| DESCRIBE(17) |-->| SELECT(7) |-->| CALL_TEMPLATE(16) |-->| SELECT(7) |-->| SELECT(4) |-->| WRITE(10) |-->| CREATE_TEMPLATE(18) |-->| INFER(2) |-->| LIST(12) |-->| CALL_TEMPLATE(3) |-->| LIST(13) |-->(end)",
		"comment": "Workflow commands can be run in 'indexed' mode (type='indexed') or in 'all' mode (type='all').",
		"type": "indexed",
		"indexes": [0,1,2,20,5,21,12,17,7,16,7,4,10,18,2,12,3,19,13,21,5]
		}
	},
	"CSMCommands":[
		{ "index": 0,
		  "commandType": "loadKnowledgeBase",
		  "stepnote": "LOAD_KB",
		  "comment": "REQUIRED: ALLWAYS RUN THIS AS THE FIRST COMMAND! (Types: 'predefined' | 'file&uri')",
		  "knowledgeBase": {
			"name": "bicycle",
			"type": "file&uri",
			"ontology": { "name": "bicycle", "folder": "data/models/generated_models", "file": "SWGBicycle.ttl", "uri": "http://siima.net/ont/bicycle" },
			"imports": null,
			"backup": [{ "name": "bicycle", "folder": "data/models/genereted_models", "file": "SWGBicycle.ttl", "uri": "http://siima.net/ont/bicycle" },
			{ "name": "bicycle", "folder": "data/models/importing_models", "file": "bicycle.ttl", "uri": "http://siima.net/ont/bicycle" },
			{ "name": "accessories", "folder": null, "file": "accessories.ttl", "uri": "http://siima.net/ont/accessories" }]
		  }
		},
		{ "index": 1,
		  "commandType": "createInferenceModel",
		  "stepnote": "INF_MODEL",
		  "comment": "NOTE:OFTEN REQUIRED: This command creates the inference model and registers spin.",
		  "create": {
			"name": "create inference model and spin registering",
			"type": "create_and_register"
		  }
		},		
		{ "index": 2,
		  "commandType": "runInferences",
		  "stepnote": "INFER",
		  "comment": "NOTE:OFTEN REQUIRED: This command runs all spin inferences (creates the inference model, if not yet created) .",
		  "inference": {
			"name": "pre_inference",
			"type": "iterative"
		  }
		},			
		{ "index": 3,
		  "commandType": "templateCall",
		  "stepnote": "CALL_TEMPLATE",
		  "comment": "NOTE:Only the first queryvariable used (TODO)",
		  "template": {
			"name": "BicycleNameSWGTemplate1",
			"type": "select",
			"args": [
				{ "name": "wcount", "type": "integer", "value": "2" }				
			],
			"queryVars": [ "name","bic"					
			]
		  }
		},
		{ "index": 4,
		  "commandType": "sparqlQuery",
		  "stepnote": "SELECT",
		  "comment": "TODO: ?bell a access:Bell . ?bell rdfs:label ?label .",
		  "query": {
			"name": "SELECT Query Bell label",
			"type": "select",
			"preprefixes": "yes",
			"select": "?bell ?label",
			"where": "?bell a access:Bell .  ?bell rdfs:label ?label .",
			"limit": "100",
			"queryVars": [ "?label", "?bell"					
			]
		  }		},
		{ "index": 5,
		  "commandType": "sparqlQuery",
		  "stepnote": "SELECT",
		  "query": {
			"name": "SELECT Query Bicycle wheel count",
			"type": "select",
			"preprefixes": "yes",
			"select": "?bic ?wcount ?name",
			"where": "?bic a bicycle:Bicycle . ?bic bicycle:wheelcount ?wcount . ?bic bicycle:name ?name .",
			"limit": "100",
			"queryVars": [ "?bic","?wcount", "?name"					
			]
		  }
		},			
		{ "index": 6,
		  "commandType": "sparqlQuery",
		  "stepnote": "UPDATE",
		  "query": {
			"name": "UPDATE bicycle name (TOIMII!!!)",
			"type": "update",
			"preprefixes": "yes",
			"delete": "?bic bicycle:name ?oldname .",
			"insert": "?bic bicycle:name 'UUSI_NIMI' .",
			"where": "?bic rdf:type bicycle:Bicycle . ?bic bicycle:name ?oldname .",
			"bind": null,
			"filter": null
		  }
		},			
		{ "index": 7,
		  "commandType": "sparqlQuery",
		  "stepnote": "SELECT",
		  "query": {
			"name": "SELECT Query Bicycle name",
			"type": "select",
			"preprefixes": "yes",
			"select": "?bic ?name",
			"where": "?bic a bicycle:Bicycle . ?bic bicycle:name ?name .",
			"limit": "100",
			"queryVars": [ "?name"					
			]
		  }
		},
		{ "index": 8,
		  "commandType": "sparqlQuery",
		  "stepnote": "UPDATE",
		  "query": {
			"name": "UPDATE Bell rdfs:label (TOIMIIKO?)",
			"type": "update",
			"preprefixes": "yes",
			"delete": " ?bell rdfs:label ?oldlabel .",
			"insert": "?bell rdfs:label 'MODIFIED_BELL_label' .",
			"where": "?bell a access:Bell . ?bell rdfs:label ?oldlabel .",
			"bind": null,
			"filter": null
		  }
		},			
		{ "index": 9,
		  "commandType": "writeModel",
		  "stepnote": "WRITE",
		  "comment": "Write type can be 'file' or 'console'. Modelcat can be 'merged', 'inferred' or 'main'.",
		  "write": {
			"name": "Write Inferred Triples to Console",
			"type": "console",
			"filePath": "data/inferences/inferred_bicycle_sat.ttl",
			"modelcat": "inferred"
		  }
		},
		{ "index": 10,
		  "commandType": "writeModel",
		  "stepnote": "WRITE",
		  "comment": "Write type can be 'file' or 'console'. Modelcat can be one of 'inferred'/'main'/'mainall'?=?'merged'.",
		  "write": {
			"name": "Write merged model to file",
			"type": "file",
			"filePath": "data/models/generated_models/inferred_bicycle_wed.ttl",
			"modelcat": "inferred"
		  }
		},
		{ "index": 11,
		  "commandType": "runSpinConstructors",
		  "stepnote": "CONSTRUCT",
		  "comment": "run all Spin Constructors",
		  "constructors": {
			"name": "Run Spin Constructors",
			"type": "all"
		  }
		},
		{ "index": 12,
		  "commandType": "listTemplates",
		  "stepnote": "LIST",
		  "comment": "Lists all templates and detailed info about templates in 'list.info' list",
		  "listing": {
			"name": "All plus detailed info about some of them",
			"type": "all&info",
			"info": [
				{"localname": "BicycleByNameSWGTemplate",
				"uri": null
				}, 
				{"localname": null, 
				"uri": "http://siima.net/ont/bicycle#BicycleNameTemplate1"
				},
				{"localname": "UpdateBicycleName", 
				"uri": null
				},
				{"localname": "UpdateBicycleNameTemplate2", 
				"uri": null
				}
			]
		  }
		},
		{ "index": 13,
		  "commandType": "listFunctions",
		  "stepnote": "LIST",
		  "comment": "Lists all SPIN Functions",
		  "listing": {
			"name": "All SPIN Functions",
			"type": "all",
		  }
		},
		{ "index": 14,
		  "commandType": "checkConstraints",
		  "stepnote": "CONSTRAINTS",
		  "comment": "run 'all' (type 'all') Spin Constraints or only for one 'resource'",
		  "constraints": {
			"name": "Run Spin Constraints",
			"type": "all",
			"uri": "http://siima.net/ont/bicycle#Bicycle_4"
		  }
		},
		{ "index": 15,
		  "commandType": "templateCall",
		  "stepnote": "CALL_TEMPLATE",
		  "comment": "NOTE:TESTING UPDATE TEMPLATE: EI TOIMI?? MUTTA EI TOIMI TMCss‰k‰‰n!!!!",
		  "template": {
			"name": "UpdateBicycleName",
			"type": "update",
			"args": [
				{ "name": "newname", "type": "string", "value": "JUKAN_UUSI_JUPITER" },
				{ "name": "model", "type": "string", "value": "Jupiter_1" }	
			],
			"queryVars": null
		  }
		},
		{ "index": 16,
		  "commandType": "templateCall",
		  "stepnote": "CALL_TEMPLATE",
		  "comment": "NOTE:TESTING UPDATE TEMPLATE (no arqs) ?? TOIMIIII!!!!!!!!",
		  "template": {
			"name": "UpdateBicycleNameTemplate2",
			"type": "update",
			"args": null,
			"queryVars": null
		  }
		},
		{ "index": 17,
		  "commandType": "sparqlQuery",
		  "stepnote": "DESCRIBE",
		  "query": {
			"name": "DESCRIBE Bicycles(TOIMII)",
			"type": "describe",
			"preprefixes": "yes",
			"describe": " ?bic ",
			"where": "?bic a bicycle:Bicycle . FILTER EXISTS { ?bic bicycle:hasModel ?model .} ",
			"bind": null,
			"filter": null
		  }
		},
		{ "index": 18,
		  "commandType": "createNewTemplate",
		  "stepnote": "CREATE_TEMPLATE",
		  "comment": "NOTE:testing select template creation: based on BicycleNameTemplate2(TOIMII)",
		  "template": {
			"name": "BicycleNameSWGTemplate1",
			"ns": "http://siima.net/ont/bicycle#",
			"type": "select",
			"preprefixes": "yes",
			"select": " ?bic ?wcount ?name ",
			"where": "?bic rdf:type bicycle:Bicycle .  ?bic bicycle:wheelcount ?wcount .  ?bic bicycle:name ?name .",
			"limit": null,
			"args": [
				{ "name": "wcount", "type": "XSD.integer", "argComment": "The number of the wheels in the bicycle queried." }				
			]
		  }
		},
		{ "index": 19,
		  "commandType": "userinput",
		  "stepnote": "USER_INPUT",
		  "comment": "NOTE: Pause execution for user checks .",
		  "userprompt": {
			"name": "user prompt",
			"type": "check",
			"prompt": "continue",
			"default": "Y"
		  }
		},
		{ "index": 20,
		  "commandType": "createNewTemplate",
		  "stepnote": "CREATE_TEMPLATE",
		  "comment": "NOTE:testing select template creation: based on BicycleNameTemplate2(TOIMII)",
		  "template": {
			"name": "BicycleByNameSWGTemplate",
			"ns": "http://siima.net/ont/bicycle#",
			"type": "select",
			"preprefixes": "yes",
			"select": " ?bic ?name ",
			"where": "?bic rdf:type bicycle:Bicycle . ?bic bicycle:name ?name .",
			"limit": null,
			"args": [
				{ "name": "name", "type": "XSD.string", "argComment": "The name of the bicycle queried." }				
			]
		  }
		},
		{ "index": 21,
		  "commandType": "sparqlQuery",
		  "stepnote": "SELECT_EVAL",
		  "query": {
			"name": "SELECT Query Bicycle using EVAL(Template)",
			"type": "select",
			"preprefixes": "yes",
			"select": "?result",
			"where": "bicycle:BicycleByNameSWGTemplate spin:body ?body . ?body rdf:type sp:Select . BIND (spin:eval(?body, arg:name, 'Jukan_fillari') AS ?result)",
			"limit": "10",
			"queryVars": [ "?result"					
			]
		  }
		}		
		],
		"CSMStore": {
		  "comment": "--------- NOTE: This is a backup (Not part of the command list) -----",
		  "commandBackup": [
			{ "index": null,
			"commandType": "sparqlQuery",
			"comment": "PROBLEM: Not working?",
			"query": {
				"name": "Update WorkOrder_666 ID",
				"type": "update",
				"preprefixes": "yes",
				"delete": "workcoreplus:WorkOrder_666 workcoreplus:work_order_id 666 .",
				"insert": "?wouri workcoreplus:work_order_id 777 .",
				"where": "?wouri rdf:type workcoreplus:WorkOrder . ?wouri workcoreplus:work_order_id 666 .",
				"bind": null,
				"filter": null
		  }
		}
		]
		}
}

