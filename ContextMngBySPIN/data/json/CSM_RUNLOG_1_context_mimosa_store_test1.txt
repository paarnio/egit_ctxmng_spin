CSM CONSOLE LOG '2016-02-22' 12:20
Test1/Run1
========== WORKFLOW STEPS LOG ==========

 (start)-->| LOAD_KB(0) |-->| INF_MODEL(1) |-->| INFER(2) |-->| SELECT(3) |-->| USER_CHECK(4) |-->| LIST(5) |-->| USER_CHECK(4) |-->| CALL_TEMPLATE(6) |-->| SELECT(3) |-->(end)

================ CommandFileSpinMng running... ===============


------------ Command Workflow file?  -----------
>>>> Give Workflow filepath ?> (Default:data/json/csmCommands.json)
data/json/csmCommands_context_mimosa_store_test1.json
A:data/json/csmCommands_context_mimosa_store_test1.json
---

--------------------------------------------------
+'CSMHeader':
+----+'filename': 'data/json/csmCommands_context_mimosa_store_test1.json'
+----+'created': '2016-02-21'
+----+'updated': '2016-02-22'
+----+'history': ''
--------------------------------------------------

--Reading commands from csm command file (json) ... 




========== Next Command Index:(0): LOAD_KB========== 
----+ Command: loadKnowledgeBaseCommand
----+----+ KB name:context_mimosa
12:09:13 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: loadModelWithImports()
---loadModelWithImports()
loadModelWithImports: loaded basemodel + imports = #9
12:09:15 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: createReasonerModel()

----------- Knowledge Base Ready  ----------


========== Next Command Index:(1): INF_MODEL========== 
----+ Command: createInferenceModelCommand
----+----+ name:create inference model and spin registering
12:09:15 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: createInferredModelAndRegister()
---Creating inferred sub-model and registering locally defined functions


========== Next Command Index:(2): INFER========== 
----+ Command: runInferencesCommand
----+----+ name:pre_inference

---- OPERATION: Run Inferences ----

12:09:15 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: createInferredModelAndRegister()
---SPIN REGISTRING ONLY (this.inferredTriples already created)
12:09:15 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: runAllSpinInferences()
---Inferred triples: 0

---- --------- ----



========== Next Command Index:(3): SELECT========== 
----+ Command: sparqlQueryCommand
----+----+ name:Query WorkOrders
12:09:15 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: sparqlQuery()
---sparqlQuery()
============ Sparql SELECT Query Results ==============
(1) Select Query result: ?s = http://ssp4t5.net/mimosa/combined#WorkOrder_2
(1) Select Query result: ?woid = 2^^http://www.w3.org/2001/XMLSchema#integer
(2) Select Query result: ?s = http://ssp4t5.net/mimosa/combined#WorkOrder_1
(2) Select Query result: ?woid = 1^^http://www.w3.org/2001/XMLSchema#integer
sparqlQuery: result rows #2


========== Next Command Index:(4): USER_CHECK========== 
----+ Command: userPromptCommand
Qcontinue>>>? (Default:Y)
>>>>>USER>>>>Two WorkOrder's found from the model: woid=1 & 2 <<<<<
A:>>>>>USER>>>>Two WorkOrder's found from the model: woid=1 & 2 <<<<<
---
----+ User Reply: >>>>>USER>>>>Two WorkOrder's found from the model: woid=1 & 2 <<<<<
-------------------


========== Next Command Index:(5): LIST========== 
----+ Command: listTemplatesCommand
----+----+listTemplatesCommand name:All plus detailed info about some of them and type:all&info
12:12:03 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: getTemplates()

================ALL MODEL TEMPLATES ================

Template is CountPropertyConstraintTemplates------- with URI:http://spinrdf.org/spl#CountPropertyConstraintTemplates
------- with comment:Abstract superclass of property constraints that compare the number of values with either min or max count.
Template is ConstraintTemplates------- with URI:http://spinrdf.org/spl#ConstraintTemplates
------- with comment:Abstract superclass of templates that can be used as spin:constraints. The subclasses are expected to construct spin:ConstraintViolations and use ?this to talk about the instances of the associated class.
Template is CreateSituationContextTemplate------- with URI:http://ssp4t5.net/test/context_mimosa#CreateSituationContextTemplate
------- with comment:null
Template is CreateRecommendationTemplate------- with URI:http://ssp4t5.net/test/context_mimosa#CreateRecommendationTemplate
------- with comment:null
Template is PropertyPairConstraintTemplates------- with URI:http://spinrdf.org/spl#PropertyPairConstraintTemplates
------- with comment:Abstract base class for templates that take two properties as arguments and establish a relationship between them.
Template is ConstructDefaultValues------- with URI:http://spinrdf.org/spl#ConstructDefaultValues
------- with comment:This template can be attached as spin:constructor to a root class such as rdfs:Resource to ensure that SPIN processors assign default values to certain properties. Looks for any templates attached as spin:constraints to the types of ?this and then assigns their declared spl:defaultValues.
Template is Template------- with URI:http://ssp4t5.net/test/context_mimosa#Template
------- with comment:null
Template is Attribute------- with URI:http://spinrdf.org/spl#Attribute
------- with comment:Defines an "attribute" of a class. Attribute definitions bundle common modeling patterns known from object-oriented languages like UML. Each attribute can have min and max cardinality, a value type and a default value. The attribute links a class with one RDF property. This template should be used as spin:constraints on a class to make sure that classes meet the expected cardinalities and valueType constraints.
If a model wants to use spl:defaultValue, then it should instantiate the spl:ConstructDefaultValues as a spin:constructor at some root class, such as rdfs:Resource.
Template is ConstructTemplates------- with URI:http://spinrdf.org/spin#ConstructTemplates
------- with comment:Suggested abstract base class for all ConstructTemplates.
Template is AllArguments------- with URI:http://spinrdf.org/spl#AllArguments
------- with comment:Gets a list of all spl:Arguments declared at a given class and its superclasses.
Template is QueryWorkOrders------- with URI:http://ssp4t5.net/test/context_mimosa#QueryWorkOrders
------- with comment:null
Template is Argument------- with URI:http://spinrdf.org/spl#Argument
------- with comment:Provides metadata about an argument of a SPIN Function or Template. Arguments wrap a given rdf:Property (predicate) and specify its value type and whether the argument is optional. When used as spin:constraint, the body of this template will verify that a non-optional value exists and that it has the specified value type. Arguments that have been declared spl:optional true become optional if the type of ?this is spl:UnionTemplate. 
Template is AssetModelInfo------- with URI:http://ssp4t5.net/test/context_mimosa#AssetModelInfo
------- with comment:null
Template is NonExistencePropertyPairConstraint------- with URI:http://spinrdf.org/spl#NonExistencePropertyPairConstraint
------- with comment:null
Template is AskTemplates------- with URI:http://spinrdf.org/spin#AskTemplates
------- with comment:Suggested abstract base class for all AskTemplates.
Template is RangePropertyConstraint------- with URI:http://spinrdf.org/spl#RangePropertyConstraint
------- with comment:Represents a constraint that narrows down a property by a minimum and maximum value compared by <= and >=.
Template is ExistencePropertyPairConstraint------- with URI:http://spinrdf.org/spl#ExistencePropertyPairConstraint
------- with comment:null
Template is UpdateTemplates------- with URI:http://spinrdf.org/spin#UpdateTemplates
------- with comment:Suggested abstract base class for all UpdateTemplates.
Template is QueryModelEventTypeNames------- with URI:http://ssp4t5.net/test/context_mimosa#QueryModelEventTypeNames
------- with comment:null
Template is UntypedObjectPropertyConstraint------- with URI:http://spinrdf.org/spl#UntypedObjectPropertyConstraint
------- with comment:A generic SPIN template that can be used to declare a constraint that all values of a given property must have an rdf:type.
Template is CreateAssetRecommendationTemplate2------- with URI:http://ssp4t5.net/test/context_mimosa#CreateAssetRecommendationTemplate2
------- with comment:null
Template is RegexPropertyConstraint------- with URI:http://spinrdf.org/spl#RegexPropertyConstraint
------- with comment:null
Template is QueryModelEventCodes------- with URI:http://ssp4t5.net/test/context_mimosa#QueryModelEventCodes
------- with comment:null
Template is RunTestCases------- with URI:http://spinrdf.org/spl#RunTestCases
------- with comment:Runs all spl:TestCases on the current model.
Template is PropertyConstraintTemplates------- with URI:http://spinrdf.org/spl#PropertyConstraintTemplates
------- with comment:Abstract superclass of constraint templates that constrain exactly one property.
Template is QueryAgentInfo------- with URI:http://ssp4t5.net/test/context_mimosa#QueryAgentInfo
------- with comment:null
Template is SPINOverview------- with URI:http://spinrdf.org/spl#SPINOverview
------- with comment:Finds all constraints and rules attached to classes in the current graph, using spin:constraint, spin:constructor, spin:rule or their sub-properties. The result set will contain the associated class, the predicate, and the SPIN rule.
Template is InferDefaultValue------- with URI:http://spinrdf.org/spl#InferDefaultValue
------- with comment:Can be used to infer default values for a given subject/predicate combination. This is typically assigned as spin:rule to a class. If ?this does not already have a value for a given property {?predicate}, then this will infer the value {?defaultValue}.
Template is ObjectCountPropertyConstraint------- with URI:http://spinrdf.org/spl#ObjectCountPropertyConstraint
------- with comment:Represents a constraint that can be attached to a class to specify that a given property must have between min and max values.
Template is SelectTemplates------- with URI:http://spinrdf.org/spin#SelectTemplates
------- with comment:Suggested abstract base class for all SelectTemplates.
Template is Templates------- with URI:http://spinrdf.org/spin#Templates
------- with comment:Suggested abstract base class for all Templates.
Template is CreateResourceTemplateSiima------- with URI:http://ssp4t5.net/test/context_mimosa#CreateResourceTemplateSiima
------- with comment:null
Template is CreateWorkOrderTemplate------- with URI:http://ssp4t5.net/test/context_mimosa#CreateWorkOrderTemplate
------- with comment:null
12:12:03 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: printTemplateInfo()
12:12:03 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: getTemplate()
Template is CreateWorkOrderTemplate------- with URI:http://ssp4t5.net/test/context_mimosa#CreateWorkOrderTemplate
-------- with comment:null
Template body CONSTRUCT {
    ?wouri a workcoreplus:WorkOrder .
    ?wouri workcoreplus:work_order_id ?woid .
    ?wouri workcoreplus:toAgent ?agent .
    ?wouri combined:targetSegment_tag ?segtag .
    ?wouri combined:targetAsset_id ?assetid .
}
WHERE {
    BIND (:crisassetid(?segtag) AS ?assetid) .
    BIND (:crisagent(?agentid) AS ?agent) .
    BIND (IRI(fn:concat("http://ssp4t5.net/mimosa/workcoreplus#WorkOrder_", str(?woid))) AS ?wouri) .
}
Template argument key: segtag
Template argument key: woid
Template argument key: agentid
12:12:03 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: printTemplateInfo()
12:12:03 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: getTemplate()
Template is CreateSituationContextTemplate------- with URI:http://ssp4t5.net/test/context_mimosa#CreateSituationContextTemplate
-------- with comment:null
Template body CONSTRUCT {
    ?ctx a mctxcore:SituationContext .
    ?ctx mctxcore:hasElement ?eworkorder .
    ?ctx mctxcore:hasElement ?target .
    ?ctx mctxcore:hasElement ?person .
    ?eworkorder a mctxsimple:EWorkOrder .
    ?eworkorder mctxcore:hasWorkOrder ?wo .
    ?target a mctxsimple:EMaintTarget .
    ?target mctxcore:ref_tag_code ?tag .
    ?person a mctxsimple:EMaintPerson .
    ?person mctxcore:cris_agent_id ?agentid .
}
WHERE {
    BIND (:crisworkorder(?workorderid) AS ?wo) .
    OPTIONAL {
        ?wo combined:targetSegment_tag ?tag .
    } .
    OPTIONAL {
        ?wo workcoreplus:toAgent ?agent .
        ?agent regcore:agent_id ?agentid .
    } .
    BIND (afn:now() AS ?datetime) .
    BIND (IRI(fn:concat("http://ssp4t5.net/context/mctxcore#SituationContext_", str(?datetime))) AS ?ctx) .
    BIND (IRI(fn:concat("http://ssp4t5.net/context/mctxsimple#EMaintTarget_", str(?datetime))) AS ?target) .
    BIND (IRI(fn:concat("http://ssp4t5.net/context/mctxsimple#EMaintPerson_", str(?datetime))) AS ?person) .
    BIND (IRI(fn:concat("http://ssp4t5.net/context/mctxsimple#EWorkOrder_", str(?datetime))) AS ?eworkorder) .
}
Template argument key: workorderid


========== Next Command Index:(4): USER_CHECK========== 
----+ Command: userPromptCommand
Qcontinue>>>? (Default:Y)
>>>>>USER>>>> Templates's found from the model <<<<<
A:>>>>>USER>>>> Templates's found from the model <<<<<
---
----+ User Reply: >>>>>USER>>>> Templates's found from the model <<<<<
-------------------


========== Next Command Index:(6): CALL_TEMPLATE========== 
----+ Command: templateCallCommand
----+----+Template name:CreateWorkOrderTemplate and type:construct
0:----+----+----+Argument name:woid
0:----+----+----+Argument type:integer
0:----+----+----+Argument value:201
12:15:47 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: addArgumentNodeToMap()
1:----+----+----+Argument name:agentid
1:----+----+----+Argument type:integer
1:----+----+----+Argument value:1
12:15:47 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: addArgumentNodeToMap()
2:----+----+----+Argument name:segtag
2:----+----+----+Argument type:string
2:----+----+----+Argument value:SEG-101
12:15:47 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: addArgumentNodeToMap()
12:15:47 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: callTemplateByName()
12:15:47 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: getTemplate()
12:15:47 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: callConstructTemplate()
=================CONSTRUCT TEMPLATE RESULTS===============

<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:j.0="http://ssp4t5.net/mimosa/combined#"
    xmlns:j.1="http://ssp4t5.net/mimosa/workcoreplus#" > 
  <rdf:Description rdf:about="http://ssp4t5.net/mimosa/workcoreplus#WorkOrder_201">
    <j.0:targetAsset_id rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">101</j.0:targetAsset_id>
    <j.0:targetSegment_tag rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SEG-101</j.0:targetSegment_tag>
    <j.1:toAgent rdf:resource="http://ssp4t5.net/mimosa/combined#Agent_1"/>
    <j.1:work_order_id rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">201</j.1:work_order_id>
    <rdf:type rdf:resource="http://ssp4t5.net/mimosa/workcoreplus#WorkOrder"/>
  </rdf:Description>
</rdf:RDF>
==================================================



========== Next Command Index:(3): SELECT========== 
----+ Command: sparqlQueryCommand
----+----+ name:Query WorkOrders
12:15:48 INFO  Logger               :: Entering: siima.spin.ModelSpinManager method: sparqlQuery()
---sparqlQuery()
============ Sparql SELECT Query Results ==============
(1) Select Query result: ?s = http://ssp4t5.net/mimosa/combined#WorkOrder_2
(1) Select Query result: ?woid = 2^^http://www.w3.org/2001/XMLSchema#integer
(2) Select Query result: ?s = http://ssp4t5.net/mimosa/combined#WorkOrder_1
(2) Select Query result: ?woid = 1^^http://www.w3.org/2001/XMLSchema#integer
(3) Select Query result: ?s = http://ssp4t5.net/mimosa/workcoreplus#WorkOrder_201
(3) Select Query result: ?woid = 201^^http://www.w3.org/2001/XMLSchema#integer
sparqlQuery: result rows #3


========== WORKFLOW STEPS LOG ==========

 (start)-->| LOAD_KB(0) |-->| INF_MODEL(1) |-->| INFER(2) |-->| SELECT(3) |-->| USER_CHECK(4) |-->| LIST(5) |-->| USER_CHECK(4) |-->| CALL_TEMPLATE(6) |-->| SELECT(3) |-->(end)
